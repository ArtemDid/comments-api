name: Build and Deploy Image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_image_tag.outputs.image_tag }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Set image tag
        id: set_image_tag
        run: |
          IMAGE_TAG="ghcr.io/${{ github.repository_owner }}/my-image-name:$(date +%s)"
          echo "IMAGE_TAG=${IMAGE_TAG,,}" >> $GITHUB_ENV
          echo "::set-output name=image_tag::${IMAGE_TAG,,}"

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ env.IMAGE_TAG }}

      - name: Push the Docker image
        run: docker push ${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Pull the Docker image
        run: docker pull ${{ needs.build.outputs.image_tag }}

      - name: Run the container
        run: docker run -d -p 3000:3000 --name my_app_container ${{ needs.build.outputs.image_tag }}

      - name: Show container logs (for debugging)
        run: docker logs my_app_container || true

      - name: Wait for the container to be ready
        run: |
          for i in {1..10}; do
            if curl --fail http://localhost:3000/healthcheck; then
              echo "Container is ready!"
              exit 0
            fi
            echo "Waiting for container..."
            sleep 5
          done
          echo "Container did not become ready in time"
          exit 1

      - name: Run tests
        run: curl http://localhost:3000/healthcheck

name: Build and Deploy with Docker Compose

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GITHUB_IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/my-image-name
  DOCKERHUB_IMAGE_NAME: docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/my-image-name

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Set image names in lowercase
        run: |
          GITHUB_IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/my-image-name"
          DOCKERHUB_IMAGE_NAME="docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/my-image-name"
          echo "GITHUB_IMAGE_NAME=${GITHUB_IMAGE_NAME,,}" >> $GITHUB_ENV
          echo "DOCKERHUB_IMAGE_NAME=${DOCKERHUB_IMAGE_NAME,,}" >> $GITHUB_ENV

      - name: Create .env file from secrets
        run: |
          echo "APP_TYPE=${{ secrets.APP_TYPE }}" >> .env
          echo "AUTO_MIGRATION=${{ secrets.AUTO_MIGRATION }}" >> .env
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env
          echo "LOG_NAME_SERVICE=${{ secrets.LOG_NAME_SERVICE }}" >> .env
          echo "PG_CONNECTION_STRING=${{ secrets.PG_CONNECTION_STRING }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "SECRET=${{ secrets.SECRET }}" >> .env

      - name: Build and tag Docker image
        run: |
          docker-compose -f docker-compose.yml build app
          docker tag node_ts_app_comments:latest $GITHUB_IMAGE_NAME:latest
          docker tag node_ts_app_comments:latest $GITHUB_IMAGE_NAME:${{ github.sha }}
          docker tag node_ts_app_comments:latest $DOCKERHUB_IMAGE_NAME:latest
          docker tag node_ts_app_comments:latest $DOCKERHUB_IMAGE_NAME:${{ github.sha }}

      - name: Push Docker image to GitHub Container Registry
        run: |
          docker push $GITHUB_IMAGE_NAME:latest
          docker push $GITHUB_IMAGE_NAME:${{ github.sha }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push $DOCKERHUB_IMAGE_NAME:latest
          docker push $DOCKERHUB_IMAGE_NAME:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Set image names in lowercase
        run: |
          GITHUB_IMAGE_NAME="ghcr.io/${{ github.repository_owner }}/my-image-name"
          DOCKERHUB_IMAGE_NAME="docker.io/${{ secrets.DOCKER_HUB_USERNAME }}/my-image-name"
          echo "GITHUB_IMAGE_NAME=${GITHUB_IMAGE_NAME,,}" >> $GITHUB_ENV
          echo "DOCKERHUB_IMAGE_NAME=${DOCKERHUB_IMAGE_NAME,,}" >> $GITHUB_ENV

      - name: Create .env file from secrets
        run: |
          echo "APP_TYPE=${{ secrets.APP_TYPE }}" >> .env
          echo "AUTO_MIGRATION=${{ secrets.AUTO_MIGRATION }}" >> .env
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> .env
          echo "LOG_NAME_SERVICE=${{ secrets.LOG_NAME_SERVICE }}" >> .env
          echo "PG_CONNECTION_STRING=${{ secrets.PG_CONNECTION_STRING }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "SECRET=${{ secrets.SECRET }}" >> .env

      - name: Pull Docker image from GitHub Container Registry
        run: docker pull $GITHUB_IMAGE_NAME:latest

      - name: Deploy with Docker Compose
        run: docker-compose -f docker-compose.yml up -d

      - name: Show container logs for debugging
        run: docker-compose logs app || true

      - name: Wait for the container to be ready
        run: |
          for i in {1..10}; do
            if curl --fail http://localhost:${{ secrets.PORT }}/; then
              echo "Container is ready!"
              exit 0
            fi
            echo "Waiting for container..."
            sleep 5
          done
          echo "Container did not become ready in time"
          docker-compose logs app
          exit 1

      - name: Run tests
        run: curl http://localhost:${{ secrets.PORT }}/

      - name: Clean up
        if: always()
        run: docker-compose down
